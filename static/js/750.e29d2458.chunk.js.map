{"version":3,"file":"static/js/750.e29d2458.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/HowManyCharactersWereLiked/HowMany.styled.js","components/HowManyCharactersWereLiked/HowMany.jsx","components/PageLikeButton/PageLikeButton.jsx","components/MoviePage/MoviePageView/MoviePageView.js","components/MoviePage/MoviePageView/MoviePageView.styled.js","services/movie-api.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components';\r\n\r\nexport const Img = styled.img`\r\n  display: inline;\r\n`;\r\n\r\nexport const Div = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Description = styled.h3`\r\n  margin-left: 10px;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { Link, Outlet } from 'react-router-dom';\r\nimport { Description } from './HowMany.styled';\r\nimport { Img } from 'components/MoviePage/MoviePageView/MoviePageView.styled';\r\nimport * as movieAPI from '../../services/movie-api';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addLikes, addChars } from 'redux/likesSlice';\r\n\r\nexport const HowManyCharactersWereLiked = ({ characterId }) => {\r\n  const [arr, setArr] = useState([]);\r\n  const [dataLikes, setDataLikes] = useState(null);\r\n  const reduxLikes = useSelector(state => state.likes.dataLikes);\r\n  const emptyArr = [];\r\n  const onFillArr = () => {\r\n    reduxLikes.forEach(element => {\r\n      emptyArr.push(element.id);\r\n    });\r\n    return emptyArr;\r\n  };\r\n\r\n  const fetchLikes = () => {\r\n    setArr([...arr, ...onFillArr()]);\r\n    if (arr.length > 0) {\r\n      movieAPI.fetchLikedCharacters(arr).then(setDataLikes);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button style={{ color: 'red' }} onClick={fetchLikes}>\r\n        Double click!{' '}\r\n      </button>\r\n      <h2>\r\n        Liked Characters\r\n        {dataLikes &&\r\n          dataLikes.map(character => (\r\n            <div key={character.id}>\r\n              <Img src={character.image}></Img>\r\n              <h3>{character.species}</h3>\r\n              <p>{character.status}</p>\r\n              <h4>Location</h4>\r\n              <p>{character.location.name}</p>\r\n              <h5>Gender</h5>\r\n              <p>{character.gender}</p>\r\n            </div>\r\n          ))}\r\n      </h2>\r\n      ;\r\n    </>\r\n  );\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport { addLikes } from 'redux/likesSlice';\r\nimport { useDispatch } from 'react-redux';\r\nconst HANDLE_LIKE = Symbol('HANDLE_LIKE');\r\nconst HANDLE_DISLIKE = Symbol('HANDLE_DISLIKE');\r\n// const onLocalStorage = (state = 0) => {\r\n//   if (!state) {\r\n//     return 0;\r\n//   } else {\r\n//     return state;\r\n//   }\r\n// };\r\n\r\n// const currentState = JSON?.parse(localStorage.getItem('charactersData'));\r\nconst persistState = JSON?.parse(localStorage.getItem('persist:likes'));\r\nconst persistStorageMatching = () => {};\r\n\r\nconst initialState = {\r\n  likes: 0,\r\n  dislikes: 0,\r\n  active: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  const { likes, dislikes, active } = state;\r\n\r\n  switch (action.type) {\r\n    case HANDLE_LIKE:\r\n      return {\r\n        ...state,\r\n        likes: state.likes + 1,\r\n        dislikes: active === 'dislike' ? dislikes - 1 : dislikes,\r\n        active: 'like',\r\n      };\r\n    case HANDLE_DISLIKE:\r\n      return {\r\n        ...state,\r\n        likes: active === 'like' ? likes - 1 : likes,\r\n        active: 'dislike',\r\n        dislikes: dislikes + 1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const LikeOrDislike = ({ characterId }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const dispatch1 = useDispatch();\r\n  const { likes, dislikes, active } = state;\r\n  const name = JSON.parse(persistState.dataLikes).find(\r\n    idObj => idObj.id === characterId\r\n  );\r\n  console.log(name);\r\n  localStorage.setItem(\r\n    'charactersData',\r\n    JSON.stringify({\r\n      id: characterId,\r\n      likes: likes,\r\n      dislikes: dislikes,\r\n    })\r\n  );\r\n  dispatch1(\r\n    addLikes({\r\n      id: characterId,\r\n      likes: likes,\r\n      dislikes: dislikes,\r\n    })\r\n  );\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <button\r\n        style={{\r\n          color: active === 'like' ? 'green' : 'black',\r\n          marginRight: '10px',\r\n        }}\r\n        onClick={() =>\r\n          active !== 'like' ? dispatch({ type: HANDLE_LIKE }) : null\r\n        }\r\n      >\r\n        <strong>Likes</strong>\r\n        &nbsp;|&nbsp;\r\n        {likes}\r\n      </button>\r\n      <button\r\n        style={{ color: active === 'dislike' ? 'red' : 'black' }}\r\n        onClick={() =>\r\n          active !== 'dislike' ? dispatch({ type: HANDLE_DISLIKE }) : null\r\n        }\r\n      >\r\n        <strong>Dislikes</strong>\r\n        &nbsp;|&nbsp;\r\n        {dislikes}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { Outlet, useParams } from 'react-router-dom';\r\nimport { Description } from './MoviePageView.styled';\r\nimport { Img } from './MoviePageView.styled';\r\nimport { Div } from './MoviePageView.styled';\r\nimport * as movieApi from '../../../services/movie-api';\r\nimport { LikeOrDislike } from '../../PageLikeButton/PageLikeButton';\r\nimport { HowManyCharactersWereLiked } from 'components/HowManyCharactersWereLiked/HowMany';\r\nconst MoviePageView = ({ goBack }) => {\r\n  const { movieId } = useParams();\r\n  const [character, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    movieApi.fetchCharactersById(movieId).then(setMovie);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {!character && <h2>Loading...</h2>}\r\n      <button type=\"button\" onClick={goBack}>\r\n        Go Back\r\n      </button>\r\n      {character && (\r\n        <div key={character.id}>\r\n          <h2>{character.name}</h2>{' '}\r\n          <Div>\r\n            <Img src={character.image}></Img>\r\n\r\n            <Description>\r\n              <h3>{character.species}</h3>\r\n              <p>{character.status}</p>\r\n              <h4>Location</h4>\r\n              <p>{character.location.name}</p>\r\n              <h5>Gender</h5>\r\n              <p>{character.gender}</p>\r\n              <LikeOrDislike characterId={character.id} />\r\n              {/* <ul>\r\n                <li key={movie.id}>\r\n                  Overview\r\n                  <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n                </li>\r\n              </ul> */}\r\n            </Description>\r\n          </Div>\r\n          <Outlet />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviePageView;\r\n","import styled from 'styled-components';\r\n\r\nexport const Img = styled.img`\r\n  display: inline;\r\n`;\r\n\r\nexport const Div = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  margin-left: 10px;\r\n`;\r\n","import axios from 'axios';\r\naxios.defaults.baseURL = 'https://rickandmortyapi.com/api';\r\n\r\nexport async function fetchAllCharacters() {\r\n  const response = await axios.get('/character');\r\n  return response.data.results;\r\n}\r\n\r\nexport async function fetchAllLocation(id) {\r\n  const response = await axios.get(`/location/${id}`);\r\n  console.log(response.data.results);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchAllEpisodes() {\r\n  const response = await axios.get(`/episode`);\r\n  return response.data.cast;\r\n}\r\n\r\nexport async function fetchCharactersById(id) {\r\n  const response = await axios.get(`/character/${id}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function searchMovies(query) {\r\n  const response = await axios.get(\r\n    `https://rickandmortyapi.com/api/character/?name=${query}`\r\n  );\r\n  return response.data.results;\r\n}\r\n\r\nexport async function fetchLikedCharacters(chars) {\r\n  const response = await axios.get(\r\n    `https://rickandmortyapi.com/api/character/${chars}`\r\n  );\r\n\r\n  return response.data;\r\n}\r\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","styled","HowManyCharactersWereLiked","characterId","useState","setArr","dataLikes","setDataLikes","reduxLikes","useSelector","state","likes","emptyArr","style","color","onClick","forEach","element","push","id","length","movieAPI","then","map","character","src","image","species","status","location","name","gender","HANDLE_LIKE","HANDLE_DISLIKE","persistState","JSON","parse","localStorage","getItem","initialState","dislikes","active","reducer","action","type","LikeOrDislike","useReducer","dispatch","dispatch1","useDispatch","find","idObj","console","log","setItem","stringify","addLikes","display","marginRight","goBack","movieId","useParams","setMovie","useEffect","movieApi","Img","Div","Description","fetchAllCharacters","axios","response","data","results","fetchAllLocation","fetchCharactersById","searchMovies","query","fetchLikedCharacters","chars"],"sourceRoot":""}
{"version":3,"file":"static/js/219.6001381f.chunk.js","mappings":"mQAcaA,GAZMC,EAAAA,GAAAA,IAAH,4CAIGA,EAAAA,GAAAA,IAAH,0CAIWA,EAAAA,GAAAA,IAAH,8CAIAA,EAAAA,GAAAA,GAAH,iI,UCmBrB,EA3Ba,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA2BE,EAAAA,EAAAA,UAAS,MAApC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA6BN,GAASO,KAAKH,KAC1C,CAACJ,KAGF,+BACE,SAAC,EAAAQ,SAAD,CAAUC,UAAU,wCAApB,SACGN,IACC,eAAIO,MAAO,CAAEC,UAAW,OAAQC,QAAS,GAAzC,UACE,yBACE,UAACd,EAAD,YACE,SAAC,KAAD,CAAMe,GAAE,kBAAaV,EAAMW,IAA3B,SAAkCX,EAAMY,QACxC,uCAAeZ,EAAMY,SACrB,sCAAcZ,EAAMa,SAAWb,EAAMa,QAAQC,cAJxCd,EAAMW,Y,0MChBpB,SAAeI,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAU,cAD5B,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCT,GAAhC,uFACkBK,IAAAA,IAAA,oBAAuBL,IADzC,cACCM,EADD,OAELI,QAAQC,IAAIL,EAASC,KAAKC,SAFrB,kBAGEF,EAASC,MAHX,kEAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAmCZ,GAAnC,uFACkBK,IAAAA,IAAA,qBAAwBL,IAD1C,cACCM,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBT,IAAAA,IAAA,0DAC8BS,IAFhD,cACCR,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,uFACkBX,IAAAA,IAAA,oDACwBW,IAF1C,cACCV,EADD,yBAKEA,EAASC,MALX,kEA9BPF,IAAAA,SAAAA,QAAyB","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","services/movie-api.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Img = styled.img`\r\n  display: inline;\r\n`;\r\n\r\nexport const Div = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const DivImage = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 1px solid black;\r\n  margin-bottom: 10px;\r\n`;\r\n","import { useState, useEffect, Suspense } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport * as movieAPI from '../../services/movie-api';\r\nimport { Img } from './Cast.styled';\r\nimport { DivImage } from './Cast.styled';\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovies] = useState(null);\r\n\r\n  useEffect(() => {\r\n    movieAPI.fetchCharactersById(movieId).then(setMovies);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        {movie && (\r\n          <ul style={{ listStyle: 'none', padding: 0 }}>\r\n            <li key={movie.id}>\r\n              <DivImage>\r\n                <Link to={`/movies/${movie.id}`}>{movie.name}</Link>\r\n                <p>Character: {movie.name}</p>\r\n                <p>Episodes: {movie.episode && movie.episode.length}</p>\r\n              </DivImage>\r\n            </li>\r\n          </ul>\r\n        )}\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import axios from 'axios';\r\naxios.defaults.baseURL = 'https://rickandmortyapi.com/api';\r\n\r\nexport async function fetchAllCharacters() {\r\n  const response = await axios.get('/character');\r\n  return response.data.results;\r\n}\r\n\r\nexport async function fetchAllLocation(id) {\r\n  const response = await axios.get(`/location/${id}`);\r\n  console.log(response.data.results);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchAllEpisodes() {\r\n  const response = await axios.get(`/episode`);\r\n  return response.data.cast;\r\n}\r\n\r\nexport async function fetchCharactersById(id) {\r\n  const response = await axios.get(`/character/${id}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function searchMovies(query) {\r\n  const response = await axios.get(\r\n    `https://rickandmortyapi.com/api/character/?name=${query}`\r\n  );\r\n  return response.data.results;\r\n}\r\n\r\nexport async function fetchLikedCharacters(chars) {\r\n  const response = await axios.get(\r\n    `https://rickandmortyapi.com/api/character/${chars}`\r\n  );\r\n\r\n  return response.data;\r\n}\r\n"],"names":["DivImage","styled","movieId","useParams","useState","movie","setMovies","useEffect","movieAPI","then","Suspense","fallback","style","listStyle","padding","to","id","name","episode","length","fetchAllCharacters","axios","response","data","results","fetchAllLocation","console","log","fetchCharactersById","searchMovies","query","fetchLikedCharacters","chars"],"sourceRoot":""}